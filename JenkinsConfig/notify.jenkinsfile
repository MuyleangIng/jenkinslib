@Library(['jenkinslib']) _
pipeline {
    environment {
        // Telegram bot
        BOT_ID = '6678469501'
        BOT_TOKEN = 'AAGO8syPMTxn0gQGksBPRchC-EoC6QRoS5o'
        CHAT_ID = '1162994521'
        // // Mail configuration (optional)
        // MAIL_FROM = 'your-email@example.com'
        // MAIL_TO = 'recipient-email@example.com'
        BRANCH = 'main'
        CONTAINER_NAME = 'angular-docker'
    }
    agent any
    stages {
        stage('Notify') {
            steps {
                script {
                    def successMessage = """
                    *Deployment Successful:*
                    - *Container:* ${env.CONTAINER_NAME}
                    - *Branch:* ${BRANCH}
                    """
                     notify([
                            message: "Build failed⛔(<:>) Error: ${e.getMessage()}",
                        ])
                    // try {
                    //     // Your build steps go here
                    //     // For example:
                    //     sh 'exit 1' // Simulate a build failure
                    // } catch (Exception e) {
                    //     notify([
                    //         message: successMessage,
                    //         // mailParams: [
                    //         //     message: "Build failed⛔(<:>) Error: ${e.getMessage()}",
                    //         //     subject: "Jenkins Build Failure"
                    //         // ]
                    //     ])
                    //     notify(
                    //         message: "Build failed⛔(<:>) Error: ${e.getMessage()}"
                    //         // mailParams: [
                    //         //     message: "Build failed⛔(<:>) Error: ${e.getMessage()}",
                    //         //     subject: "Jenkins Build Failure"
                    //         // ]
                    //     )
                    //     echo "Build failed⛔(<:>) Error: ${e.getMessage()}"
                    //     currentBuild.result = 'FAILURE'
                    //     throw e
                    // }
                }
            }
        }
    }
}
